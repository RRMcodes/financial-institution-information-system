/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FinancialInstitutionIS;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

    /**
 *
 * @author TUF GAMING
 */
public class FinancialInstitutionInfo extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public FinancialInstitutionInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CategoryGroup = new javax.swing.ButtonGroup();
        BankingGroup = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        Name = new javax.swing.JLabel();
        Headoffice = new javax.swing.JLabel();
        Category = new javax.swing.JLabel();
        Interest = new javax.swing.JLabel();
        Capital = new javax.swing.JLabel();
        Mobile = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        headOfficeTF = new javax.swing.JTextField();
        interestTF = new javax.swing.JTextField();
        capitalTF = new javax.swing.JTextField();
        ARB = new javax.swing.JRadioButton();
        BRB = new javax.swing.JRadioButton();
        CRB = new javax.swing.JRadioButton();
        DRB = new javax.swing.JRadioButton();
        yesCB = new javax.swing.JCheckBox();
        noCB = new javax.swing.JCheckBox();
        Heading = new javax.swing.JLabel();
        clearTableBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        cat = new javax.swing.JComboBox<>();
        searchByCat = new javax.swing.JButton();
        searchTF = new javax.swing.JTextField();
        searchByCapital = new javax.swing.JButton();
        Heading1 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileSubMenu = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        exitSubMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpSubMenu = new javax.swing.JMenuItem();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        table.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Head Office", "Category", "Interest Rate", "Capital", "Mobile Banking"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        Name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Name.setText("Name");

        Headoffice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Headoffice.setText("Head Office");

        Category.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Category.setText("Category");

        Interest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Interest.setText("Interest Rate");

        Capital.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Capital.setText("Capital");

        Mobile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Mobile.setText("Mobile Banking");

        CategoryGroup.add(ARB);
        ARB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ARB.setText("A");

        CategoryGroup.add(BRB);
        BRB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BRB.setText("B");

        CategoryGroup.add(CRB);
        CRB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CRB.setText("C");

        CategoryGroup.add(DRB);
        DRB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DRB.setText("D");

        BankingGroup.add(yesCB);
        yesCB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        yesCB.setText("Yes");

        BankingGroup.add(noCB);
        noCB.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        noCB.setText("No");

        Heading.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Heading.setText("Enter Bank details here:");

        clearTableBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clearTableBtn.setText("Clear Table");
        clearTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTableBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });

        searchByCat.setText("Search by category");
        searchByCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCatActionPerformed(evt);
            }
        });

        searchTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTFActionPerformed(evt);
            }
        });

        searchByCapital.setText("Search by capital");
        searchByCapital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCapitalActionPerformed(evt);
            }
        });

        Heading1.setBackground(new java.awt.Color(0, 0, 0));
        Heading1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Heading1.setText("Banking Information System");

        deleteBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        fileSubMenu.setText("File");

        openMenu.setText("Open File");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        fileSubMenu.add(openMenu);

        exitSubMenu.setText("Exit");
        exitSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitSubMenuActionPerformed(evt);
            }
        });
        fileSubMenu.add(exitSubMenu);

        jMenuBar1.add(fileSubMenu);

        helpMenu.setText("Help");

        helpSubMenu.setText("Help for Users");
        helpSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpSubMenuActionPerformed(evt);
            }
        });
        helpMenu.add(helpSubMenu);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(searchByCat, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(searchByCapital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(Heading1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Mobile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Capital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Interest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Headoffice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yesCB, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(noCB, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(headOfficeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(interestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(capitalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ARB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(BRB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(CRB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DRB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearTableBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Heading1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByCat)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByCapital))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Headoffice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(headOfficeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ARB)
                            .addComponent(BRB)
                            .addComponent(CRB)
                            .addComponent(DRB))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Interest, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(interestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Capital, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capitalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yesCB)
                            .addComponent(noCB)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        
         DefaultTableModel tblmodel = (DefaultTableModel) table.getModel();
           tblmodel.setRowCount(0);
            
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        int reply = chooser.showOpenDialog(null);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        
        if(reply==JFileChooser.APPROVE_OPTION){
            File file = new File (chooser.getSelectedFile().getAbsolutePath());
            
            try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
        
            Object[] lines = br.lines().toArray();
            
                for (Object line : lines) {
                    String[] row = line.toString().split(",");
                    model.addRow(row);
                }
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this,"File not found");

            }
        }
    }//GEN-LAST:event_openMenuActionPerformed

    private void helpSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpSubMenuActionPerformed
        // TODO add your handling code here:
       
        
        String msg="Add >>>> Adds new row of inputted data into the table \nClear >>>> Clears all the text fields \nExit >>>> closes program"
                + "\nClear Table >>>> helps to delete all the rows in the table"
                +"\nDelete >>>> Deletes a selected row from table \nsearch by capital >>>> Helps to search financial institution's details according to capital"
                + "\nsearch by category >>>> Helps to search number of financial institution according to category \n" + 
                "OpenFile >>>> Helps to import data from external text or excel files   ";
        JTextArea j = new JTextArea(15,60);
        j.setText(msg);
        j.setEditable(false);
        JScrollPane jsp = new JScrollPane(j);
        JOptionPane.showMessageDialog(null,jsp);
    }//GEN-LAST:event_helpSubMenuActionPerformed

    private void clearTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTableBtnActionPerformed
        // TODO add your handling code here:
         int rowCount = table.getRowCount();
        
        for (int j=0;j<rowCount;j++){
           DefaultTableModel tblmodel = (DefaultTableModel) table.getModel();
            tblmodel.setRowCount(0);
            
        }       
    }//GEN-LAST:event_clearTableBtnActionPerformed

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catActionPerformed

    private void searchTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTFActionPerformed

    private void searchByCapitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCapitalActionPerformed
        // TODO add your handling code here:
             
       int count = table.getRowCount();
       
        Object [] name = new Object [count];
        Object [] headOffice = new Object [count];
        int [] capital = new int [count];
        
        for(int i=0; i<count;i++){
            name [i]=table.getValueAt(i,0);
            headOffice[i]=table.getValueAt(i, 2);
            capital [i] = Integer.parseInt(table.getValueAt(i,4).toString());
        }
        
        sort(capital, new Object [][]{name,headOffice});
        int num = binarySearch(capital,Integer.parseInt(searchTF.getText()));
        JOptionPane.showMessageDialog(this,name[num] + "\n" + headOffice[num] + "\n" +capital[num]);
        
    }//GEN-LAST:event_searchByCapitalActionPerformed

    private int binarySearch(int[]arr,int searchElement){
        int start = 0, end = arr.length-1;
         while (start <= end) {
            int mid = (start + end) / 2;
            if (searchElement == arr[mid]){
                return mid;
            }
            else if (searchElement < arr[mid]) {
                end = mid - 1 ;
            }
            else {
                start = mid + 1;
            }
        }
        return -1;
    
    }
    
   
    private void sort (int []arr, Object[][]objArr){
        int num = arr.length;
        for(int i=1;i<num ;i++){
            for(int j=0; j<num-i;j++){
                
                if(arr[j]>arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr [j+1];
                    arr[j+1] = temp;
                    
                    for (Object[] obj : objArr) {
                        Object tempObj = obj[j];
                        obj[j] = obj [j+1];
                        obj[j+1] = tempObj;
                    }
                }
            }
        }
    }

    
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        nameTF.setText("");
        headOfficeTF.setText("");
        interestTF.setText("");
        capitalTF.setText("");
        CategoryGroup.clearSelection();
        BankingGroup.clearSelection();
        
    }//GEN-LAST:event_clearBtnActionPerformed

    private boolean containsString (String text){
        
        boolean containsString = true;
        String [] arr = text.split(" ");
        
        for ( String a:arr){
            char[] chars = a.toCharArray();
            for(char each : chars){
                if(Character.isLetter(each) ){
                } 
                else {
                containsString = false;
                }
            }
        }
        return containsString;
    }
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here: 
        
        try {  
        
            String name = nameTF.getText();
            String headoffice = headOfficeTF.getText();
            ARB.setActionCommand("A");
            BRB.setActionCommand("B");
            CRB.setActionCommand("C");
            DRB.setActionCommand("D");

            String interest= interestTF.getText();
            String capital = capitalTF.getText();
            yesCB.setActionCommand("Yes");
            noCB.setActionCommand("No");

            String cb = BankingGroup.getSelection().getActionCommand();
            String rbtn = CategoryGroup.getSelection().getActionCommand();
            
            
            Integer.parseInt(interest);
            Integer.parseInt(capital);
            

            if (name.equals("") || headoffice.equals("") || interest.equals("") || capital.equals("")) {
                JOptionPane.showMessageDialog(this, "please enter data in all the fields");
            }
            else {
                
                if (containsString(name) && containsString(headoffice)){
                    
                    boolean duplicate = false  ;
                    
                    for (int x = 0; x<table.getRowCount();x++ ){
                        
                        if (name.equals(table.getValueAt(x, 0).toString())){
                            duplicate = true;
                            JOptionPane.showMessageDialog(this, "The data for " + name + " is already added");
                            break;
                        }    
                    }
                    
                    if (duplicate == false) {

                        DefaultTableModel m = (DefaultTableModel)table.getModel();
                        m.addRow(new Object[]{null,null,null,null,null,null,null});

                        String [] arr = {name,headoffice,rbtn,interest,capital,cb};
                        int rowCount = table.getRowCount();
                        int columnCount = table.getColumnCount();
                        int rowIndex = 0;
                        
                        do
                        {
                            String s = (String)table.getValueAt(rowIndex,0);
                            if (s!=null && s.length()!=0){
                                rowIndex++;
                            }
                            else
                            {
                                break;
                            }
                        }
                            while (rowIndex <rowCount);

                        for(int i=0;i<columnCount;i++){
                            table.setValueAt(arr[i],rowIndex,i);
                        }
                        JOptionPane.showMessageDialog(this, "Data Added Sucessfully");
                    
                    }
                }
                
                else {
                    JOptionPane.showMessageDialog(this, "Name and Head office can only contain alphabets");
                }
            }
        }
        catch (NullPointerException e) {
           JOptionPane.showMessageDialog(this, "please enter data in all the fields");
        }
        catch (NumberFormatException a){
            JOptionPane.showMessageDialog(this, "Interest rate and capital should be numbers");
        }
       
      
    }//GEN-LAST:event_addBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblmodel = (DefaultTableModel) table.getModel();
        if(table.getSelectedRowCount()==1){
            tblmodel.removeRow(table.getSelectedRow());
        }
        else{
            if(table.getRowCount()==0){
                //if table is empty
                JOptionPane.showMessageDialog(this,"Table is Empty." );
            }
            else{
                //if multiple row or no row selected
                JOptionPane.showMessageDialog(this,"Please Select Single Row" );
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void exitSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitSubMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitSubMenuActionPerformed

    private void searchByCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCatActionPerformed
        // TODO add your handling code here:
        
        String category = cat.getSelectedItem().toString(); 
        String name = "";
  
        int num = table.getRowCount();
        int count = 0;
        
        for (int i=0;i<num;i++) {
            
            if (category.equals(table.getValueAt(i, 2).toString())) {
                
                count++;
                
                if (count==1){
                    name = table.getValueAt(i, 0).toString();
                }
                else {
                    name = name + "," + table.getValueAt(i, 0) ;
                }

            }
        }
        
        String [] arr = name.split(",");
        
        
        if (count < 1) {
            JOptionPane.showMessageDialog(this,"There are no financial institutions in category " + category);
        }
        else{    
            
            String text = "There are " + count + " financial institutions in category " + category + "\nwhich are : \n"  ;

            for ( String each: arr) {
               text = text + each + "\n";
            }

            JOptionPane.showMessageDialog(this, text);
        }
    }//GEN-LAST:event_searchByCatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinancialInstitutionInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinancialInstitutionInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinancialInstitutionInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinancialInstitutionInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FinancialInstitutionInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ARB;
    private javax.swing.JRadioButton BRB;
    private javax.swing.ButtonGroup BankingGroup;
    private javax.swing.JRadioButton CRB;
    private javax.swing.JLabel Capital;
    private javax.swing.JLabel Category;
    private javax.swing.ButtonGroup CategoryGroup;
    private javax.swing.JRadioButton DRB;
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel Heading1;
    private javax.swing.JLabel Headoffice;
    private javax.swing.JLabel Interest;
    private javax.swing.JLabel Mobile;
    private javax.swing.JLabel Name;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField capitalTF;
    private javax.swing.JComboBox<String> cat;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton clearTableBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JMenuItem exitSubMenu;
    private javax.swing.JMenu fileSubMenu;
    private javax.swing.JTextField headOfficeTF;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpSubMenu;
    private javax.swing.JTextField interestTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTF;
    private javax.swing.JCheckBox noCB;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JButton searchByCapital;
    private javax.swing.JButton searchByCat;
    private javax.swing.JTextField searchTF;
    private javax.swing.JTable table;
    private javax.swing.JCheckBox yesCB;
    // End of variables declaration//GEN-END:variables
}
